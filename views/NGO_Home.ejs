<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NGO Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://getbootstrap.com/docs/5.3/assets/css/docs.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css" />
    <link rel="stylesheet" href="/ngo_home_style.css">
    <style>
        .home-btn {
            background-color: #8f2525;
            border: none;
            padding: 10px 20px;
            color: white;
            font-size: 16px;
            border-radius: 5px;
            text-decoration: none;
        }

        .home-btn:hover {
            background-color: #721414;
        }
    </style>
</head>

<body>

    <div class="d-flex justify-content-between align-items-center p-3" style="position: absolute; top: 0; width: 100%;">
        <a href="/" class="home-btn">Home</a>
        <h1>
            <%= ngoName %>
        </h1>
        <a href="/ngo/logout" class="home-btn">Logout</a>
    </div>


    <div class="d-flex justify-content-center align-items-center" style="height: 100vh">
        <div class="container">
            <div class="row">
                <div class="col-6 col-md-3  button">
                    <a href="/signup"><button class="btn btn-danger ngo_opt">Add Donor</button></a>
                </div>
                <div class="col-6 col-md-3 button">
                    <button class="btn btn-danger ngo_opt" id="userdata-btn">Donor Lists</button>
                </div>
                <div class="col-6 col-md-3 button">
                    <button class="btn btn-danger ngo_opt" data-bs-toggle="modal"
                        data-bs-target="#campInfoModal">Organize The Camp</button>
                </div>
                <div class="col-6 col-md-3 button">
                    <button class="btn btn-danger ngo_opt btn-mail">Mail The Donors</button>
                </div>
            </div>
        </div>
    </div>

    <!--Camp information Modal -->
    <div class="modal fade" id="campInfoModal" tabindex="-1" aria-labelledby="campInfoModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header camp_heading">
                    <h5 class="modal-title" id="campInfoModalLabel">Camp Information</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="campInfoForm" action="/ngo/camp-info" method="post">
                        <div class="mb-3">
                            <label for="date" class="form-label camp_label">Date</label>
                            <input type="date" class="form-control" name="date" required>
                        </div>
                        <div class="mb-3">
                            <label for="location" class="form-label camp_label">Location</label>
                            <input type="text" class="form-control" name="location" required>
                        </div>
                        <div class="mb-3">
                            <label for="timing" class="form-label camp_label">Timing</label>
                            <input type="text" class="form-control" name="timing" required>
                        </div>
                        <div class="mb-3">
                            <label for="organizedBy" class="form-label camp_label">Organized By</label>
                            <input type="text" class="form-control" name="organizedBy" value="<%= ngoName %>" readonly>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-danger" id="mail-them">Done</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div class="modal fade" id="confirmMailModal" tabindex="-1" aria-labelledby="confirmMailModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmMailModalLabel" style="color: #721414;">Confirm Email Sending
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to send emails to all donors?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmSendMail">Send Email</button>
                </div>
            </div>
        </div>
    </div>


    <script>

        // displaying Donor List
        document.getElementById('userdata-btn').addEventListener('click', async () => {
            try {
                const response = await fetch('/ngo/userdata', {
                    method: 'get',
                    headers: { 'Content-Type': 'application/json' }
                });
                if (response.ok) {
                    window.location.href = '/ngo/userdata';
                } else {
                    alert('Error fetching user data: ' + response.status);
                }
            } catch (error) {
                alert('Error fetching user data: ' + error);
            }
        });

        // Handle form submission for camp info
        document.getElementById('campInfoForm').addEventListener('submit', async (event) => {
            event.preventDefault(); // Prevent the default form submission

            const formData = new FormData(event.target);
            const campInfo = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/ngo/camp-info', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(campInfo)
                });

                if (response.ok) {
                    alert('Camp information submitted successfully!');
                    location.reload();
                } else {
                    const errorData = await response.json();
                    alert('Error submitting camp info: ' + errorData.message);
                }
            } catch (error) {
                alert('Error submitting camp info: ' + error.message);
            }
        });

        document.querySelector(".btn-mail").addEventListener("click", function () {
            // Show confirmation modal when 'Mail The Donors' is clicked
            var confirmModal = new bootstrap.Modal(document.getElementById('confirmMailModal'));
            confirmModal.show();
        });

        document.getElementById("confirmSendMail").addEventListener("click", async function () {
            // Close modal before sending email
            var confirmModal = bootstrap.Modal.getInstance(document.getElementById('confirmMailModal'));
            confirmModal.hide();

            alert("Wait for some time while mailing.");

            try {
                const response = await fetch('/ngo/mail-them', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });

                const responseData = await response.json();
                if (response.ok) {
                    alert('Email sent successfully');
                    location.reload();
                } else {
                    alert('Error sending emails: ' + responseData.message);
                }
            } catch (error) {
                console.log('Error sending emails: ' + error);
            }
        });
    </script>
</body>

</html>